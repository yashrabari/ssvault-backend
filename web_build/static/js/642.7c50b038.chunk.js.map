{"version":3,"file":"static/js/642.7c50b038.chunk.js","mappings":"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","sources":["pages/Subscriptions/index.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Back, Container, Page, Row, Title } from \"../../components/common\"\r\nimport { Plan, Switch, SwitchButton } from \"../../components/Subscriptions\"\r\nimport LoadingSpinner from \"../../components/common/LoadingSpinner\"\r\nimport { useGetSubscriptionsAndPackagesQuery } from \"../../store/slice/api\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport default function Subscriptions() {\r\n  const [monthly, setMonthly] = useState(true)\r\n  const [interval, setInterval] = useState('month')\r\n  const user = useSelector(state => state.reducer.auth.user)\r\n\r\n  const { data: subscriptionsAndPackagesApiResponse, isLoading: isFetchingSubscriptionsAndPackages, error: errorFetchingSubscriptionsAndPackages } = useGetSubscriptionsAndPackagesQuery()\r\n\r\n  const packages = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return []\r\n\r\n    return subscriptionsAndPackagesApiResponse.data.filter(\r\n      (snp) => snp.nickname.includes('package:') && (monthly ? snp.recurring.interval === 'month' : snp.recurring.interval === 'year')\r\n    ).map((snp) => ({\r\n      ...snp,\r\n      nickname: snp.nickname.split(':')[1],\r\n      currency: snp.currency === 'usd' ? '$' : '$',\r\n      order: snp.nickname.includes('BASIC') ? 1 : snp.nickname.includes('STANDARD') ? 2 : 3,\r\n      color: snp.nickname.includes('BASIC') ? '#FBBC05' : snp.nickname.includes('STANDARD') ? '#A7D170' : '#F19ECE',\r\n      availableFeatureCount: snp.nickname.includes('BASIC') ? 2 : snp.nickname.includes('STANDARD') ? 3 : 4,\r\n    })).sort((a, b) => a.order - b.order)\r\n  }\r\n    , [subscriptionsAndPackagesApiResponse, interval, monthly])\r\n\r\n  const storages = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return []\r\n\r\n    return subscriptionsAndPackagesApiResponse.data.filter(\r\n      (snp) => snp.nickname.includes('storage:') && (monthly ? snp.recurring.interval === 'month' : snp.recurring.interval === 'year')\r\n    ).map((snp) => ({\r\n      ...snp,\r\n      nickname: snp.nickname.split(':')[1],\r\n      currency: snp.currency === 'usd' ? '$' : '$',\r\n      order: parseInt(snp.nickname.split(':')[1]),\r\n    })).sort((a, b) => a.order - b.order)\r\n  }\r\n    , [subscriptionsAndPackagesApiResponse, interval, monthly])\r\n\r\n  const videos = useMemo(() => {\r\n    if (!subscriptionsAndPackagesApiResponse) return []\r\n\r\n    return subscriptionsAndPackagesApiResponse.data.filter(\r\n      (snp) => snp.nickname.includes('videos:') && (monthly ? snp.recurring.interval === 'month' : snp.recurring.interval === 'year')\r\n    ).map((snp) => ({\r\n      ...snp,\r\n      nickname: snp.nickname.split(':')[1],\r\n      currency: snp.currency === 'usd' ? '$' : '$',\r\n      order: parseInt(snp.nickname.split(':')[1]),\r\n    })).sort((a, b) => a.order - b.order)\r\n  }\r\n    , [subscriptionsAndPackagesApiResponse, interval, monthly])\r\n\r\n\r\n  useEffect(() => {\r\n    if (user && user.subscription) {\r\n      user.subscription.items.find((items) => {\r\n        if (items.plan.nickname.includes('package')) {\r\n          if (items.plan.interval === 'month') {\r\n            setMonthly(true)\r\n          } else {\r\n            setMonthly(false)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }, [user])\r\n\r\n  return (\r\n    <Page>\r\n      <Container width=\"1227px\" margin=\"69px auto\" justifyContent=\"flex-start\">\r\n        <Title fontWeight=\"700\" margin=\"46px auto 0\">Subscription & Packages</Title>\r\n        {isFetchingSubscriptionsAndPackages\r\n          ? <LoadingSpinner />\r\n          : errorFetchingSubscriptionsAndPackages\r\n            ? <></>\r\n            : <>\r\n              <Switch>\r\n                <SwitchButton active={monthly} onClick={() => { setMonthly(true); setInterval('month') }}>\r\n                  <p style={{ margin: \"auto\" }}>Monthly</p>\r\n                </SwitchButton>\r\n                <SwitchButton right active={!monthly} onClick={() => { setMonthly(false); setInterval('year') }}>\r\n                  <p style={{ margin: \"auto\" }}>Yearly</p>\r\n                </SwitchButton>\r\n              </Switch>\r\n\r\n              <Row justifyContent=\"space-between\" width=\"1005px\">\r\n                {packages.map((plan, index) => (\r\n                  <Plan key={index} plan={plan} videos={videos} storages={storages} interval={interval} monthly={monthly} />\r\n                ))}\r\n              </Row>\r\n            </>\r\n        }\r\n        <Back />\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n"],"names":["Subscriptions","useState","monthly","setMonthly","interval","setInterval","user","useSelector","state","reducer","auth","useGetSubscriptionsAndPackagesQuery","subscriptionsAndPackagesApiResponse","data","isFetchingSubscriptionsAndPackages","isLoading","errorFetchingSubscriptionsAndPackages","error","packages","useMemo","filter","snp","nickname","includes","recurring","map","split","currency","order","color","availableFeatureCount","sort","a","b","storages","parseInt","videos","useEffect","subscription","items","find","plan","width","margin","justifyContent","fontWeight","active","onClick","style","right","index"],"sourceRoot":""}