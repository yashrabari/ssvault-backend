{"version":3,"file":"static/js/467.55e58fdb.chunk.js","mappings":"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","sources":["pages/Login/index.js","store/actions/auth/SoicalLogin.js"],"sourcesContent":["import React from \"react\"\r\nimport { ReactComponent as Logo } from \"../../assets/images/Logo.svg\"\r\nimport {\r\n  Button,\r\n  ButtonBar,\r\n  CheckBox,\r\n  Container,\r\n  CustomLink,\r\n  Divider,\r\n  Image,\r\n  InputGroup,\r\n  LogoContainer,\r\n  Page,\r\n  Paragraph,\r\n  Title\r\n} from \"../../components/common\"\r\n\r\nimport { useState } from \"react\"\r\nimport {\r\n  appleImg,\r\n  emailImg,\r\n  facebookImg,\r\n  googleImg,\r\n  passwordImg\r\n} from \"../../assets/images\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { login, resetPassword } from \"../../store/actions/auth\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport GoogleLogin from \"react-google-login\"\r\nimport { gapi } from \"gapi-script\";\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport postgoogleLogin from \"../../api/postgoogleLogin\"\r\nimport postfacebookLogin from \"../../api/postfacebookLogin\"\r\nimport { postLogin, postResetPassword } from \"../../api\"\r\nimport SocialLogin from \"../../store/actions/auth/SoicalLogin\"\r\nimport { passwordReseted, requestResetPassword, setResetPasswordError } from \"../../store/slice/mainSlice\"\r\nimport AppleSignin from 'react-apple-signin-auth';\r\nimport { useLoginWithAppleMutation } from \"../../store/slice/api\"\r\n\r\nexport default function Login() {\r\n  const [error, seterror] = useState([])\r\n  const [validateEmail, setValidateEmail] = useState(false)\r\n\r\n  const [loginWithApple] = useLoginWithAppleMutation();\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    function start() {\r\n      gapi.client.init({\r\n        clientId: '920161152373-u95bboqe5r1m45b5654gdgidipfete75.apps.googleusercontent.com',\r\n        scope: 'email',\r\n      });\r\n    }\r\n    gapi.load('client:auth2', start);\r\n\r\n  }, [])\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const [remember, setRemember] = useState(false)\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    postLogin(email, password).then((response) => {\r\n      navigate('/2fa')\r\n    }).catch((error) => {\r\n      console.log(\"error: \", error)\r\n      seterror(error.response.data)\r\n    })\r\n  }\r\n\r\n  const handleForgotPassword = async () => {\r\n    navigate('/send-email')\r\n  }\r\n\r\n  const HandleSucsess = (googledata) => {\r\n    postgoogleLogin(googledata.accessToken, googledata.googleId)\r\n      .then((response) => {\r\n        dispatch(SocialLogin({\r\n          user: {\r\n            ...googledata.profileObj,\r\n            key: response.token,\r\n          }\r\n        }))\r\n        navigate('/home')\r\n      }).catch((err) => {\r\n        console.log(err)\r\n        alert(JSON.stringify(err))\r\n      })\r\n  }\r\n  const HandleFailure = (googleres) => {\r\n    console.log('ERROR::', googleres)\r\n  }\r\n\r\n  const HandleFacbookLogin = (facebookdata) => {\r\n    console.log('facebookdata...', facebookdata);\r\n    postfacebookLogin(facebookdata.accessToken, facebookdata.id)\r\n      .then((response) => {\r\n        dispatch(SocialLogin({\r\n          user: {\r\n            ...response.user,\r\n            key: response.token,\r\n          }\r\n        }))\r\n        navigate('/home')\r\n      }).catch((err) => {\r\n        console.log(err)\r\n        alert(JSON.stringify(err))\r\n      })\r\n  }\r\n\r\n  const HandleAppleLogin = ({authorization: {code, id_token}}) => {\r\n    loginWithApple({access_token: code, id_token}).unwrap()\r\n      .then((res) => {\r\n        console.log('loginWithAppleRes...', res)\r\n        dispatch(SocialLogin({\r\n          user: {\r\n            ...res.user,\r\n            key: res.token,\r\n          }\r\n        }))\r\n        navigate('/home')\r\n      }).catch((err) => {\r\n        console.log(err)\r\n        alert(JSON.stringify(err))\r\n      })\r\n  }\r\n\r\n  const loggedIn = useSelector(state => state.reducer.auth && state.reducer.auth.loggedIn)\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      navigate(\"/home\")\r\n    }\r\n  }, [loggedIn, navigate])\r\n\r\n  return (\r\n    <Page>\r\n      <Container margin=\"100px\" padding=\"70px\" borderRadius=\"20px\">\r\n        <Title margin=\"30px\">Log In</Title>\r\n        <form\r\n          onSubmit={onSubmit}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <InputGroup\r\n            label=\"Email\"\r\n            placeholder=\"Enter your email here\"\r\n            imageSrc={emailImg}\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={event => setEmail(event.target.value)}\r\n          />\r\n          <InputGroup\r\n            label=\"Password\"\r\n            placeholder=\"Enter your password here\"\r\n            hintText=\"Forgot Password?\"\r\n            onHintClick={handleForgotPassword}\r\n            imageSrc={passwordImg}\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={event => setPassword(event.target.value)}\r\n          />\r\n\r\n          <CheckBox\r\n            text=\"Remember me\"\r\n            checked={remember}\r\n            onChange={() => setRemember(v => !v)}\r\n          />\r\n\r\n          {error.non_field_errors && (\r\n            <Paragraph color=\"#FF5F5F\">\r\n              {error.non_field_errors[0]}\r\n            </Paragraph>\r\n          )}\r\n          {validateEmail && (\r\n            <Paragraph color=\"#FF5F5F\">\r\n              Please Enter a valid Email\r\n            </Paragraph>\r\n          )}\r\n          {(error.username || error.password) && (\r\n            <Paragraph color=\"#FF5F5F\">\r\n              Fields cannot be empty\r\n            </Paragraph>\r\n          )}\r\n\r\n          <ButtonBar>\r\n            <Button color=\"#00A652\" type=\"submit\" onSubmit={onSubmit}>\r\n              Log in\r\n            </Button>\r\n          </ButtonBar>\r\n        </form>\r\n\r\n        <Divider>Or log in with</Divider>\r\n        <ButtonBar>\r\n          <GoogleLogin\r\n            clientId='920161152373-u95bboqe5r1m45b5654gdgidipfete75.apps.googleusercontent.com'\r\n            onSuccess={HandleSucsess}\r\n            onFailure={HandleFailure}\r\n            cookiePolicy={'single_host_origin'}\r\n            render={renderProps => (\r\n              <Button onClick={renderProps.onClick} style={{ backgroundColor: 'white', color: \"black\", width: \"154px\", textColor: \"#000\" }}>\r\n                <Image margin=\"8px -14px 0 -15px\" width=\"80px\" src={googleImg} alt=\"Google logo\" />\r\n                Google\r\n              </Button>\r\n            )}\r\n          >\r\n          </GoogleLogin>\r\n          <FacebookLogin\r\n            appId=\"1083826272167616\"\r\n            callback={HandleFacbookLogin}\r\n            render={renderProps => (\r\n              <Button onClick={renderProps.onClick} style={{ backgroundColor: 'white', color: \"black\", width: \"154px\", textColor: \"#000\" }}>\r\n                <Image width=\"26px\" src={facebookImg} alt=\"Facebook logo\" />{\" \"}\r\n                Facebook</Button>\r\n            )}\r\n          />\r\n          <AppleSignin\r\n            authOptions={{\r\n              clientId: 'com.crowdbotics.storeandsharevault.service',\r\n              scope: 'email name',\r\n              redirectURI: 'https://p-and-s-services-33412-staging.botics.co/login',\r\n              state: 'state',\r\n              nonce: 'nonce',\r\n              usePopup: true,\r\n            }} // REQUIRED\r\n            noDefaultStyle={false}\r\n            onSuccess={HandleAppleLogin}\r\n            onError={({error}) => error !== 'popup_closed_by_user' && alert(`Apple SignIn Error: \\n ${error}`)}\r\n            skipScript={false}\r\n            render={(props) => <Button {...props} color=\"#fff\" width=\"154px\" textColor=\"#000\">\r\n              <Image margin=\"4px -10px 0 -15px\" width=\"70px\" src={appleImg} alt=\"Apple logo\" /> Apple\r\n            </Button>}\r\n          />\r\n\r\n        </ButtonBar>\r\n\r\n        <Paragraph>\r\n          Don't have an account?{\" \"}\r\n          <CustomLink to=\"/signup\">\r\n            <Paragraph bold>Sign Up</Paragraph>\r\n          </CustomLink>\r\n        </Paragraph>\r\n        <LogoContainer>\r\n          <Logo />\r\n        </LogoContainer>\r\n      </Container>\r\n    </Page>\r\n  )\r\n}\r\n","import { setAuthError, socialLoggedIn } from \"../../slice/mainSlice\"\r\n\r\nconst SocialLogin = (response) => dispatch => {\r\n    try {\r\n        dispatch(socialLoggedIn(response))\r\n    } catch (error) {\r\n        dispatch(setAuthError(error))\r\n    }\r\n}\r\n\r\nexport default SocialLogin"],"names":["Login","useState","error","seterror","validateEmail","useLoginWithAppleMutation","loginWithApple","navigate","useNavigate","useEffect","gapi","clientId","scope","dispatch","useDispatch","email","setEmail","password","setPassword","remember","setRemember","onSubmit","e","preventDefault","postLogin","then","response","catch","console","log","data","handleForgotPassword","loggedIn","useSelector","state","reducer","auth","margin","padding","borderRadius","style","display","flexDirection","justifyContent","alignItems","label","placeholder","imageSrc","emailImg","type","value","onChange","event","target","hintText","onHintClick","passwordImg","text","checked","v","non_field_errors","color","username","onSuccess","googledata","postgoogleLogin","accessToken","googleId","SocialLogin","user","profileObj","key","token","err","alert","JSON","stringify","onFailure","googleres","cookiePolicy","render","renderProps","onClick","backgroundColor","width","textColor","src","googleImg","alt","appId","callback","facebookdata","postfacebookLogin","id","facebookImg","authOptions","redirectURI","nonce","usePopup","noDefaultStyle","authorization","code","id_token","access_token","unwrap","res","onError","skipScript","props","appleImg","to","bold","socialLoggedIn","setAuthError"],"sourceRoot":""}